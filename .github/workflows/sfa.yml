name: Build SFA

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      TAGS: with_gvisor,with_quic,with_utls,with_clash_api,with_provider,with_conntrack

    steps:
      - uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 0

      - name: Get latest Go version
        id: go_version
        run: |
          GO_VERSION=$(curl -s https://raw.githubusercontent.com/actions/go-versions/main/versions-manifest.json | grep -oE '"version": "[0-9]{1}.[0-9]{1,}(.[0-9]{1,})?"' | head -1 | cut -d':' -f2 | sed 's/ //g; s/"//g')
          echo "go_version=$GO_VERSION" >> $GITHUB_ENV  # Use GITHUB_ENV instead of GITHUB_OUTPUT for downstream use

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
           go-version: ^1.25

      - name: Checkout SFA Repository
        uses: actions/checkout@v4.1.1
        with:
          repository: SagerNet/sing-box-for-android
          ref: dev
          path: SFA
          submodules: recursive

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'oracle'
          java-version: 17
          
      - name: Setup NDK
        uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: r28
          add-to-path: false
          local-cache: false
          
      - name: Build SFA
        run: |
          git remote add sekai https://github.com/SagerNet/sing-box
          git fetch sekai
          mkdir -p SFA/app/libs/
          make lib_install
          VERSION=$(CGO_ENABLED=0 go run ./cmd/internal/read_tag)
          CC=${ANDROID_NDK_HOME}/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android35-clang
          CGO_ENABLED=1 gomobile bind -v -a -trimpath -androidapi 21 -javapkg=io.nekohasekai -libname=box -tags "${TAGS}" -ldflags "-X=runtime.godebugDefault=asynctimerchan=1 -X github.com/sagernet/sing-box/constant.Version=${VERSION} -s -w -buildid= -checklinkname=0" ./experimental/libbox
          cp ./libbox.aar SFA/app/libs/
          cd SFA
          echo "" >> gradle.properties
          echo "org.gradle.jvmargs=-Xmx4096m -Dfile.encoding=UTF-8 -XX:+UseParallelGC" >> gradle.properties
          echo "org.gradle.caching=true" >> gradle.properties
          echo "org.gradle.parallel=true" >> gradle.properties
          echo "VERSION_NAME=${VERSION}" > local.properties
          echo "VERSION_CODE=$(date +%Y%m%d%H)" >> local.properties
          sed -i '/signingConfigs.release/d' app/build.gradle
          chmod +x ./gradlew
          ./gradlew assemblePlayRelease
        env:
          ANDROID_NDK_HOME: ${{ env.ANDROID_NDK_HOME }}  # Ensure this is set if required

      - name: Sign SFA
        uses: r0adkll/sign-android-release@v1
        id: sign_app
        with:
          releaseDirectory: SFA/app/build/outputs/apk/play/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
        env:
          BUILD_TOOLS_VERSION: "34.0.0"

      - name: Upload artifact
        uses: actions/upload-artifact@v4.4.0
        with:
          name: SFA
          path: SFA/app/build/outputs/apk/play/release/*arm64-v8a-unsigned-signed.apk
