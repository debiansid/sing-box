name: Build and Release Core

on:
  push:
    tags:
      - '*'

permissions:
  contents: write

jobs:
  build:
    name: Build Binary (${{ matrix.goos }}/${{ matrix.goarch }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          # windows
          - goos: windows
            goarch: amd64
            suffix: ".exe"
          - goos: windows
            goarch: arm64
            suffix: ".exe"
          # linux
          - goos: linux
            goarch: amd64
            suffix: ""
          - goos: linux
            goarch: arm64
            suffix: ""
          # darwin
          - goos: darwin
            goarch: amd64
            suffix: ""
          - goos: darwin
            goarch: arm64
            suffix: ""

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'
          cache: true

      - name: Build
        env:
          CGO_ENABLED: 0
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          TAGS: with_quic,with_dhcp,with_wireguard,with_ech,with_utls,with_clash_api,with_gvisor,with_conntrack
          VERSION: ${{ github.ref_name }}
        run: |
          echo "Using version: ${VERSION}"
          FILENAME="sing-box-${VERSION}-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.suffix }}"
          ZIP_FILENAME="${FILENAME}.zip"
          OUTPUT_DIR="./release_assets" # Define an output directory

          mkdir -p ${OUTPUT_DIR}
          go build -v -trimpath -ldflags "-X 'github.com/sagernet/sing-box/constant.Version=${VERSION}' -s -w -buildid=" -tags ${TAGS} -o "${OUTPUT_DIR}/${FILENAME}" ./cmd/sing-box

          cd ${OUTPUT_DIR}
          zip -r "${ZIP_FILENAME}" "${FILENAME}"
          cd ..

          echo "BUILT_FILE=${OUTPUT_DIR}/${ZIP_FILENAME}" >> $GITHUB_ENV
          echo "ARTIFACT_NAME=sing-box-${{ matrix.goos }}-${{ matrix.goarch }}" >> $GITHUB_ENV # Unique artifact name per matrix job

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.BUILT_FILE }}

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./release-artifacts

      - name: List downloaded files
        run: ls -R ./release-artifacts

      - name: Upload assets to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: sing-box ${{ github.ref_name }}
          files: ./release-artifacts/*/*.zip
          draft: false
          prerelease: false
          generate_release_notes: true